// ==============================================
// Sass 基本語法教學
// ==============================================

// 1. 變數 (Variables)
// 使用 $ 符號定義變數
$primary-color: #3498db;
$secondary-color: #2ecc71;
$font-size-large: 1rem;
$border-radius: 5px;

// 2. 巢狀結構 (Nesting)
.navbar {
  background-color: $primary-color;
  padding: 1rem;
  
  // 巢狀選擇器
  .navbar-brand {
    color: white;
    font-weight: bold;
    
    // &:hover 表示 .navbar-brand:hover
    &:hover {
      color: #ecf0f1;
    }
  }
  
  .navbar-nav {
    .nav-item {
      margin: 0 0.5rem;
      
      .nav-link {
        color: white;
        transition: color 0.3s;
        
        &:hover {
          color: $secondary-color;
        }
      }
    }
  }
}

// 3. 混合 (Mixins)
// 定義可重複使用的樣式塊
@mixin button-style($bg-color, $text-color: white) {
  background-color: $bg-color;
  color: $text-color;
  padding: 0.5rem 1rem;
  border: none;
  border-radius: $border-radius;
  cursor: pointer;
  transition: all 0.3s;
  
  &:hover {
    background-color: darken($bg-color, 10%);
    transform: translateY(-2px);
  }
}

// 使用 mixin
.btn-custom-primary {
  @include button-style($primary-color);
}

.btn-custom-success {
  @include button-style($secondary-color);
}

// 4. 函數 (Functions)
@function calculate-rem($pixels) {
  @return $pixels / 16 * 1rem;
}

// 使用函數
.large-text {
  font-size: calculate-rem(24); // 輸出 1.5rem
}

// 5. 條件語句 (Conditionals)
@mixin theme-color($theme) {
  @if $theme == 'dark' {
    background-color: #2c3e50;
    color: #ecf0f1;
  } @else if $theme == 'light' {
    background-color: #ecf0f1;
    color: #2c3e50;
  } @else {
    background-color: white;
    color: black;
  }
}

.dark-theme {
  @include theme-color('dark');
}

.light-theme {
  @include theme-color('light');
}

// =============================
// SCSS 進階語法教學
// =============================

// 1. 條件語句（Conditionals）
// 用 @if、@else if、@else 依條件產生不同樣式
@mixin theme-bg($theme) {
  @if $theme == 'dark' {
    background: #222;
    color: #fff;
  } @else if $theme == 'light' {
    background: #fff;
    color: #222;
  } @else {
    background: #eee;
    color: #333;
  }
}

.dark-section {
  @include theme-bg('dark');
}
.light-section {
  @include theme-bg('light');
}

// 2. 迴圈（Loops）
// 用 @for 產生多組樣式
@for $i from 1 through 3 {
  .p-#{$i} {
    padding: #{$i}rem;
  }
}
// 用 @each 產生多組顏色
$brand-colors: (
  'main': #f0be52,
  'accent': #f16100,
  'success': #00ff3c
);
@each $name, $color in $brand-colors {
  .text-#{$name} { color: $color; }
  .bg-#{$name} { background: $color; }
}

// 3. 匯入（Import）
// 假設有 _variables.scss、_mixins.scss、_base.scss
// 在主檔案 style.scss 裡：
// @import 'variables';
// @import 'mixins';
// @import 'base';
// 這樣可以把樣式拆分管理，團隊協作更方便

// 4. 繼承（Extend）
// 用 %placeholder 定義共用樣式
%card-base {
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.08);
  padding: 1.5rem;
}
.card-news {
  @extend %card-base;
  background: #fffbe6;
}
.card-alert {
  @extend %card-base;
  background: #ffe6e6;
  border: 1px solid #d65562;
}
// 這樣可以快速產生多種共用外觀的元件

// 6. 迴圈 (Loops)
// 創建多個相似的類別
@for $i from 1 through 5 {
  .margin-#{$i} {
    margin: #{$i}rem;
  }
}

// 輸出: .margin-1, .margin-2, .margin-3, .margin-4, .margin-5

// 7. 數學運算
$container-width: 1200px;
$columns: 12;

.column {
  width: $container-width / $columns; // 100px
  margin: 0.5rem * 2; // 1rem
  padding: 1rem + 0.5rem; // 1.5rem
}
